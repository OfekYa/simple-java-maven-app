name: Java CI/CD with Docker & EC2 Deployment

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Calculate Current Version
        id: calculate-version
        uses: bitshifted/git-auto-semver@v1
        with:
          main-branch: master
          create-tag: true
          tag-prefix: 'v'

      - name: Store Version as an Environment Variable
        run: echo "VERSION=${{ steps.calculate-version.outputs.version-string }}" >> $GITHUB_ENV
        
      - name: Debug Environment Variable
        run: echo "ðŸŸ¢ Using Version: $VERSION"

      - name: Build Docker Image
        run: |
          docker build -t myapp:${{ env.VERSION }} .

      - name: Push Docker Image to Docker Hub
        run: |
          echo "${{ secrets.OFEK_DOCKERHUB_PSWRD }}" | docker login -u "${{ secrets.OFEK_DOCKERHUB }}" --password-stdin
          docker tag myapp:${{ env.VERSION }}  ${{ secrets.OFEK_DOCKERHUB }}/myapp:${{ env.VERSION }}
          docker push ${{ secrets.OFEK_DOCKERHUB }}/myapp:${{ env.VERSION }}

      - name: Deploy to AWS EC2
        run: |
          echo "Deploying to EC2..."
          ssh -o StrictHostKeyChecking=no -i {{ secrets.AWS_EC2_KEY  }} ubuntu@${{ secrets.AWS_EC2_IP }} << 'EOF'
            sudo docker pull myapp:${{ env.VERSION }}
            sudo docker stop myapp || true
            sudo docker rm myapp || true
            sudo docker run -d -p 80:8080 --name myapp myapp:${{ env.VERSION }}
          EOF
